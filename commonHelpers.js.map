{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst datetimePicker = document.getElementById('datetime-picker');\nconst startButton = document.querySelector('button[data-start]');\nconst daysValue = document.querySelector('[data-days]');\nconst hoursValue = document.querySelector('[data-hours]');\nconst minutesValue = document.querySelector('[data-minutes]');\nconst secondsValue = document.querySelector('[data-seconds]');\n\nlet interval;\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({\n        title: \"Error\",\n        text: \"Please choose a date in the future\",\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(datetimePicker, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction updateTimerInterface(time) {\n  daysValue.textContent = addLeadingZero(time.days);\n  hoursValue.textContent = addLeadingZero(time.hours);\n  minutesValue.textContent = addLeadingZero(time.minutes);\n  secondsValue.textContent = addLeadingZero(time.seconds);\n}\n\nfunction startCountdown() {\n  interval = setInterval(() => {\n    const now = new Date();\n    const timeLeft = userSelectedDate - now;\n\n    if (timeLeft <= 0) {\n      clearInterval(interval);\n      updateTimerInterface({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      datetimePicker.disabled = false;\n      startButton.disabled = true;\n      return;\n    }\n\n    const time = convertMs(timeLeft);\n    updateTimerInterface(time);\n  }, 1000);\n}\n\nstartButton.addEventListener('click', () => {\n  datetimePicker.disabled = true;\n  startButton.disabled = true;\n  startCountdown();\n});\n"],"names":["datetimePicker","startButton","daysValue","hoursValue","minutesValue","secondsValue","interval","userSelectedDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimerInterface","time","startCountdown","timeLeft"],"mappings":"0IAMA,MAAMA,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAE5D,IAAIC,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAC9BF,GAAoB,IAAI,MAC1BG,EAAS,MAAM,CACb,MAAO,QACP,KAAM,oCACd,CAAO,EACDT,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,EAEAU,EAAUX,EAAgBQ,CAAO,EAEjC,SAASI,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAqBC,EAAM,CAClCnB,EAAU,YAAcgB,EAAeG,EAAK,IAAI,EAChDlB,EAAW,YAAce,EAAeG,EAAK,KAAK,EAClDjB,EAAa,YAAcc,EAAeG,EAAK,OAAO,EACtDhB,EAAa,YAAca,EAAeG,EAAK,OAAO,CACxD,CAEA,SAASC,GAAiB,CACxBhB,EAAW,YAAY,IAAM,CAE3B,MAAMiB,EAAWhB,EADL,IAAI,KAGhB,GAAIgB,GAAY,EAAG,CACjB,cAAcjB,CAAQ,EACtBc,EAAqB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAClEpB,EAAe,SAAW,GAC1BC,EAAY,SAAW,GACvB,MACD,CAED,MAAMoB,EAAOT,EAAUW,CAAQ,EAC/BH,EAAqBC,CAAI,CAC1B,EAAE,GAAI,CACT,CAEApB,EAAY,iBAAiB,QAAS,IAAM,CAC1CD,EAAe,SAAW,GAC1BC,EAAY,SAAW,GACvBqB,GACF,CAAC"}